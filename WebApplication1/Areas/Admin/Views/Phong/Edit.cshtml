@model WebApplication1.Models.PHONG

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/ckeditor/ckeditor.js"></script>
<h2>Edit Room</h2>

@using (Html.BeginForm("Edit", "Phong", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PHONG</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.MaPH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MaPH, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MaPH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoPH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoPH, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoPH, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày CheckIn", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="NgayCheckIn" class="form-control" value="@Model.CheckIn?.ToString(" yyyy-MM-dd")" />
                @Html.ValidationMessage("NgayCheckIn", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ngày CheckOut", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="date" name="NgayCheckOut" class="form-control" value="@Model.CheckOut?.ToString(" yyyy-MM-dd")" />
                @Html.ValidationMessage("NgayCheckOut", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Avatar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="AnhUpload" class="form-control" />
                @if (!string.IsNullOrEmpty(Model.Anh))
                {
                    <img src="~/Images/@Model.Anh" alt="Room Image" style="max-width: 200px; margin-top: 10px;" />
                }

            </div>
        </div>

        <div class="form-group">
            <textarea name="MoTa" id="mota">@ViewBag.MoTa</textarea>
            <script>
                CKEDITOR.replace("mota", {
                    customConfig: '/ckeditor/config.js',
                    extraAllowedContent: 'span'
                });
            </script>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TrangThai,
                    new SelectList(new[] { "Available", "Occupied", "Booked" }),
                    htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaLoai, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MaLoai, (SelectList)ViewBag.MaLoai, "Chọn loại phòng", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaLoai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NoiThat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.NoiThat, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.NoiThat, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DienTich, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DienTich, new { @class = "form-control", rows = 4 })
                @Html.ValidationMessageFor(model => model.DienTich, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary text-white" />
                <button type="button" onclick="window.location.href='@Url.Action("DanhSachPhong", "Phong")'" class="btn btn-secondary">Back to List</button>
            </div>
        </div>

    </div>
}
<style>
    /* Nút chung */
    .btn {
        padding: 12px 24px; /* Tăng kích thước nút */
        font-size: 16px; /* Kích thước chữ lớn hơn */
        font-weight: 600; /* Đậm hơn */
        border-radius: 8px; /* Bo góc lớn hơn */
        border: none;
        text-transform: uppercase; /* Viết hoa toàn bộ */
        cursor: pointer;
        transition: all 0.3s ease-in-out; /* Hiệu ứng chuyển đổi mượt */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Thêm hiệu ứng đổ bóng */
    }

    /* Nút Primary */
    .btn-primary {
        background-color: #007bff; /* Màu xanh chuẩn */
        color: white; /* Màu chữ */
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Màu khi hover */
            transform: translateY(-2px); /* Nâng nút lên khi hover */
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15); /* Tăng độ sâu bóng */
        }

    /* Nút Secondary */
    .btn-secondary {
        background-color: #6c757d; /* Màu xám chuẩn */
        color: white; /* Màu chữ */
    }

        .btn-secondary:hover {
            background-color: #5a6268; /* Màu khi hover */
            transform: translateY(-2px); /* Nâng nút lên khi hover */
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15); /* Tăng độ sâu bóng */
        }

    /* Hiệu ứng focus */
    .btn:focus {
        outline: none; /* Loại bỏ đường viền mặc định */
        box-shadow: 0 0 8px rgba(0, 123, 255, 0.5); /* Hiệu ứng focus */
    }

    /* Animation nhấn xuống */
    .btn:active {
        transform: translateY(0); /* Trả về vị trí ban đầu khi nhấn */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Giảm bóng */
    }
</style>




