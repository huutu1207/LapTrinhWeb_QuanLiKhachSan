@model WebApplication1.Models.PHONG

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/ckeditor/ckeditor.js"></script>
<h2>Tạo Phòng Mới</h2>

@using (Html.BeginForm("Create", "Phong", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Thông tin phòng</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @*@Html.LabelFor(model => model.MaPH, new { @class = "control-label col-md-2" })*@
        @Html.Label("Mã phòng", new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.MaPH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaPH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.SoPH, new { @class = "control-label col-md-2" })*@
        @Html.Label("Số phòng", new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.SoPH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SoPH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Ảnh", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="AnhUpload" class="form-control" />
            @if (ViewBag.ThongBao != null)
            {
                <span class="text-danger">@ViewBag.ThongBao</span>
            }
        </div>
    </div>

    <div class="form-group">
        <label> Mô tả</label>
        <textarea name="MoTa" id="mota"></textarea>
        <script>
            CKEDITOR.replace("mota", {
                customConfig: '/ckeditor/config.js',
                extraAllowedContent: 'span'
            });
        </script>

    </div>



    <div class="form-group">
        @*@Html.LabelFor(model => model.Gia, new { @class = "control-label col-md-2" })*@
        @Html.Label("Giá", new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control", type = "number", step = "10000" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.MaLoai, new { @class = "control-label col-md-2" })*@
        @Html.Label("Loại phòng", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.MaLoai, (SelectList)ViewBag.MaLoai, "Chọn loại phòng", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaLoai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.SoPH, new { @class = "control-label col-md-2" })*@
        @Html.Label("Nội thất", new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.NoiThat, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NoiThat, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.LabelFor(model => model.Gia, new { @class = "control-label col-md-2" })*@
        @Html.Label("Diện tích", new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.EditorFor(model => model.DienTich, new { htmlAttributes = new { @class = "form-control", type = "number", step = "1"} })
            @Html.ValidationMessageFor(model => model.DienTich, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" id="nut">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Tạo mới" class="btn btn-primary text-white" />
        </div>
    </div>
</div>
}

<div class="back" id="back">
    <a href="@Url.Action("DanhSachPhong", "QL_LoaiPhong")" class="btn btn-secondary">Quay lại danh sách</a>
</div>


<style>
    /* Cấu trúc form */
    .form-horizontal {
        max-width: 800px; /* Đặt chiều rộng tối đa cho form */
        margin: 0 auto; /* Căn giữa form */
        padding: 20px;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Thêm bóng đổ cho form */
    }

    /* Các nhóm form */
    .form-group {
        display: flex;
        flex-direction: column;
        margin-bottom: 1.5rem; /* Khoảng cách giữa các nhóm */
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 0.5rem; /* Khoảng cách giữa label và input */
            color: #495057;
        }

    .form-control {
        width: 100%; /* Đảm bảo input chiếm toàn bộ chiều rộng */
        padding: 0.75rem; /* Padding cho input */
        font-size: 1rem;
        border: 1px solid #ced4da;
        border-radius: 4px;
        background-color: #fff;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        /* Khi input focus */
        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
            outline: none;
        }

    /* Các thông báo lỗi */
    .text-danger {
        font-size: 0.875rem;
        color: #e74a3b;
    }

    /* Nút submit */
    #nut {
        display: flex;
        justify-content: flex-start; /* Căn nút sang bên trái */
        gap: 10px; /* Khoảng cách giữa các nút */
    }

        #nut input[type="submit"] {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            background-color: #007bff;
            color: white;
            border: 1px solid #007bff;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            #nut input[type="submit"]:hover {
                background-color: #0056b3;
            }

    /* Nút Quay lại */
    #back {
        margin-top: 20px;
        text-align: center;
    }

        #back a {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            background-color: #6c757d;
            color: white;
            border-radius: 4px;
            text-decoration: none;
            transition: background-color 0.3s;
        }

            #back a:hover {
                background-color: #5a6268;
            }

    /* Cải thiện giao diện CKEditor */
    textarea {
        font-family: Arial, sans-serif;
        font-size: 1rem;
        padding: 0.75rem;
        border: 1px solid #ced4da;
        border-radius: 4px;
        resize: vertical; /* Cho phép người dùng thay đổi chiều cao */
    }

        textarea:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25);
            outline: none;
        }
v
</style>
